---
import Icon from './Icon.astro';
import Label from './Label.astro';

const companies = [
	'sber.svg', 
	'sberbusiness.svg',
	'vtbbank.svg',
	'YandexPay.png',
	'yandexmarket.png',
	'YandexGo.png',
	'VKvideo.svg',
	'dzen.svg',
	'alphabank.svg',
	'sovcombank.png',
	'metro.png',
	'Rutube.png',
	'letoile.png'
]

const { scrollDirection = 'left-to-right' } = Astro.props; // Default to left-to-right if not provided

function shuffleArray(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const randomIndex = Math.floor(Math.random() * (i + 1)); // Случайный индекс от 0 до i
    [array[i], array[randomIndex]] = [array[randomIndex], array[i]]; // Меняем местами элементы
  }
  return array;
}
---


<div class="scroll-container" id=`scrollContainer`>
    <div class="scroll-wrapper" id=`scrollWrapper`>
        {shuffleArray(companies).map((brand, index) => (
            <div class="scroll-item" key={index}>
              <img src={`/assets/companies/${brand}`} alt={`Image ${index + 1}`} />
            </div>    
        ))}
    </div>
</div>

<style>
    .scroll-container {
      display: flex;
      overflow-x: auto; /* Включить горизонтальную прокрутку */
      width: 100%; /* На всю ширину экрана */
      height: auto; /* Высота зависит от содержимого */
    }
  
    .scroll-wrapper {
      display: flex;
      gap: 40px; /* Задать расстояние между ячейками */
    }
  
    .scroll-item {
      flex-shrink: 0;
      width: 300px; /* Фиксированная ширина ячейки */
      height: 200px; /* Фиксированная высота ячейки */
      display: flex;
      justify-content: center;
      align-items: center;
      background: var(--accent-regular);
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);
      overflow: hidden; /* Обрезать выходящий контент */
      position: relative;
      padding: 10px;
    }
  
    .image-container {
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }
  
    .image-container img {
      width: 100%;
      height: 100%;
      object-fit: contain; /* Сжимать изображение внутри контейнера, сохраняя пропорции */
      display: block;
      padding: 10px;
    }

    .image-container::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        pointer-events: none; /* Чтобы градиент не блокировал взаимодействие с изображением */
    }
    /* Для всех вебkit-браузеров (Chrome, Safari) */
    .scroll-container::-webkit-scrollbar {
        display: none; /* Скрыть полосу прокрутки */
    }
  </style>
  
  <script>
    // Wait until the DOM is fully loaded
    document.addEventListener('DOMContentLoaded', () => {
        // const scrollDirection = "{{ scrollDirection }}"; // Get the value passed as a prop

        const scrollContainer = document.getElementById(`scrollContainer`);
        const scrollWrapper = document.getElementById(`scrollWrapper`);

        // const scrollContainerBottom = document.getElementById(`scrollContainerBottom`);
        // const scrollWrapperBottom = document.getElementById(`scrollWrapperBottom`);
  
        // Determine scroll direction (left-to-right or right-to-left)

      // Function to manage auto-scroll
      const autoScroll = () => {
        const scrollWidth = scrollWrapper.scrollWidth;
        const containerWidth = scrollContainer.offsetWidth;

        // const scrollWidthBottom = scrollWrapperBottom.scrollWidth;
        // const containerWidthBottom = scrollContainerBottom.offsetWidth;

            // Scroll right to left
            // if (scrollContainer.scrollLeft <= 0) {
            //     scrollContainer.scrollLeft = scrollWidth; // Reset to the end if at the start
            // } else {
            //     scrollContainer.scrollLeft -= 1; // Move left
            // }

            // // Scroll left to right (default behavior)
            if (scrollContainer.scrollLeft >= scrollWidth - containerWidth) {
                scrollContainer.scrollLeft = 0; // Reset to the start if at the end
            } else {
                scrollContainer.scrollLeft += 1; // Move right
            }
      };
  
      // Start the auto-scrolling
      const interval = setInterval(autoScroll, 20); // Adjust the interval for speed
  
      // Cleanup interval when the component is no longer needed (optional)
      window.addEventListener('beforeunload', () => {
        clearInterval(interval);
      });
    });
  </script>